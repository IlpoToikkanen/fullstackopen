{"version":3,"sources":["components/Note.js","services/notes.js","App.js","index.js"],"names":["Note","_ref","note","toggleImportance","label","important","react_default","a","createElement","content","onClick","baseUrl","services_notes","request","axios","get","nonExisting","id","date","then","response","data","concat","newObject","post","put","App","_useState","useState","_useState2","Object","slicedToArray","notes","setNotes","_useState3","_useState4","newNote","setNewNote","_useState5","_useState6","showAll","setShowAll","useEffect","noteService","initialNotes","notesToShow","filter","toggleImportanceOf","find","n","changedNote","objectSpread","returnedNote","map","catch","error","alert","components_Note","key","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","length","value","onChange","target","type","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.4597dce5.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important\n    ? 'make not important' : 'make important'\n\n  return (\n    <li>\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  )\n}\n\nexport default Note","import axios from \"axios\"\nconst baseUrl = \"https://frozen-plateau-04344.herokuapp.com/notes\"\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  const nonExisting = {\n    id: 10000,\n    content: \"This note is not saved to server\",\n    date: \"2019-05-30T17:30:31.098Z\",\n    important: true\n  }\n  return request.then(response => response.data.concat(nonExisting))\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update }\n","import React, { useState, useEffect } from \"react\"\nimport Note from \"./components/Note\"\nimport noteService from \"./services/notes\"\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState(\"\")\n  const [showAll, setShowAll] = useState(true)\n\n  useEffect(() => {\n    noteService.getAll().then(initialNotes => setNotes(initialNotes))\n  }, [])\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important)\n\n  const rows = () =>\n    notesToShow.map(note => (\n      <Note\n        key={note.id}\n        note={note}\n        toggleImportance={() => toggleImportanceOf(note.id)}\n      />\n    ))\n\n  const handleNoteChange = event => {\n    setNewNote(event.target.value)\n  }\n\n  const addNote = event => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n      id: notes.length + 1\n    }\n\n    noteService.create(noteObject).then(data => {\n      setNotes(notes.concat(data))\n      setNewNote(\"\")\n    })\n  }\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => (note.id !== id ? note : returnedNote)))\n      })\n      .catch(error => {\n        alert(`the note '${note.content}' was already deleted from server`)\n        setNotes(notes.filter(n => n.id !== id))\n      })\n  }\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? \"important\" : \"all\"}\n        </button>\n      </div>\n      <ul>{rows()}</ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'  \n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}