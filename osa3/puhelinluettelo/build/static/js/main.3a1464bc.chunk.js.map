{"version":3,"sources":["components/Form.js","components/Display.js","components/Filter.js","components/Notification.js","services/dbService.js","App.js","index.js"],"names":["Form","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","value","onChange","type","Button","onClick","text","Display","persons","handleDeleteClick","map","person","key","name","number","Filter","filter","handleFilterChange","Notification","information","className","style","color","border","borderRadius","fontSize","baseUrl","axios","get","then","response","data","newObject","post","id","delete","changedPerson","put","App","useState","setPersons","setNewName","setNewNumber","setNewFilter","notificationInformation","setNotificationInformation","useEffect","dbService","personsToShow","item","toUpperCase","includes","event","target","preventDefault","setTimeout","some","e","window","confirm","index","indexOf","returnedPerson","catch","n","concat","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3a1464bc.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Form = ({\r\n  addPerson,\r\n  newName,\r\n  handleNameChange,\r\n  newNumber,\r\n  handleNumberChange\r\n}) => {\r\n  return (\r\n    <form onSubmit={addPerson}>\r\n      <div>\r\n        name: <input value={newName} onChange={handleNameChange} />\r\n      </div>\r\n      <div>\r\n        number: <input value={newNumber} onChange={handleNumberChange} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Form\r\n","import React from 'react'\r\n\r\nconst Display = ({ persons, handleDeleteClick }) => {\r\n  return (\r\n    <div>\r\n      {persons.map(person => {\r\n        return (\r\n          <div key={person.name}>\r\n            <p>\r\n              {person.name} {person.number}{' '}\r\n              <Button\r\n                text={'delete'}\r\n                onClick={() => handleDeleteClick(person)}\r\n              />\r\n            </p>\r\n          </div>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Button = ({ onClick, text }) => <button onClick={onClick}>{text}</button>\r\nexport default Display\r\n","import React from 'react'\r\n\r\nconst Filter = ({ filter, handleFilterChange }) => (\r\n  <div>\r\n    filter shown with <input value={filter} onChange={handleFilterChange} />\r\n  </div>\r\n)\r\n\r\nexport default Filter\r\n","import React from 'react'\r\n\r\nconst Notification = ({ information }) => {\r\n  const notificationStyle = {\r\n    color: 'green',\r\n    border: '2px solid green',\r\n    borderRadius: '5px',\r\n    fontSize: '25px'\r\n  }\r\n  const errorStyle = {\r\n    color: 'red',\r\n    border: '2px solid red',\r\n    borderRadius: '5px',\r\n    fontSize: '25px'\r\n  }\r\n  if (information === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"notification\"\r\n      style={information.type === 'error' ? errorStyle : notificationStyle}\r\n    >\r\n      {information.text}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification\r\n","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst updatePerson = (changedPerson, id) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, changedPerson)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, remove, updatePerson }\r\n","import React, { useState, useEffect } from 'react'\r\nimport Form from './components/Form'\r\nimport Display from './components/Display'\r\nimport Filter from './components/Filter'\r\nimport Notification from './components/Notification'\r\nimport dbService from './services/dbService'\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([])\r\n  const [newName, setNewName] = useState('')\r\n  const [newNumber, setNewNumber] = useState('')\r\n  const [filter, setNewFilter] = useState('')\r\n  const [notificationInformation, setNotificationInformation] = useState(null)\r\n\r\n  useEffect(() => {\r\n    dbService.getAll().then(data => setPersons(data))\r\n  }, [])\r\n\r\n  const addPerson = event => {\r\n    event.preventDefault()\r\n    if (!newName) {\r\n      setNotificationInformation({\r\n        text: 'Please insert name',\r\n        type: 'error'\r\n      })\r\n      setTimeout(() => {\r\n        setNotificationInformation(null)\r\n      }, 3000)\r\n      return null\r\n    } else if (!newNumber) {\r\n      setNotificationInformation({\r\n        text: 'Please insert number',\r\n        type: 'error'\r\n      })\r\n      setTimeout(() => {\r\n        setNotificationInformation(null)\r\n      }, 3000)\r\n      return null\r\n    } else if (persons.some(e => e.name === newName)) {\r\n      if (\r\n        window.confirm(\r\n          `${newName} is already added to the phonebook, replace the old number with a new one?`\r\n        )\r\n      ) {\r\n        const index = persons.map(person => person.name).indexOf(newName)\r\n        const id = persons[index].id\r\n        const changedPerson = {\r\n          name: newName,\r\n          number: newNumber,\r\n          id: id\r\n        }\r\n\r\n        dbService\r\n          .updatePerson(changedPerson, id)\r\n          .then(returnedPerson => {\r\n            setPersons(\r\n              persons.map(person =>\r\n                person.id !== id ? person : returnedPerson\r\n              )\r\n            )\r\n            setNotificationInformation({\r\n              text: `Number for ${newName} updated succesfully`,\r\n              type: 'notification'\r\n            })\r\n            setTimeout(() => {\r\n              setNotificationInformation(null)\r\n            }, 3000)\r\n            setNewName('')\r\n            setNewNumber('')\r\n          })\r\n          .catch(() => {\r\n            setNotificationInformation({\r\n              text: `${newName} no longer exists in the phonebook`,\r\n              type: 'error'\r\n            })\r\n            setTimeout(() => {\r\n              setNotificationInformation(null)\r\n            }, 3000)\r\n            setPersons(persons.filter(n => n.name !== newName))\r\n          })\r\n        return null\r\n      }\r\n      return null\r\n    } else {\r\n      const personObject = {\r\n        name: newName,\r\n        number: newNumber\r\n      }\r\n      dbService\r\n        .create(personObject)\r\n        .then(data => {\r\n          setPersons(persons.concat(data))\r\n          setNotificationInformation({\r\n            text: `Added ${newName}`,\r\n            type: 'notification'\r\n          })\r\n          setTimeout(() => {\r\n            setNotificationInformation(null)\r\n          }, 3000)\r\n          setNewName('')\r\n          setNewNumber('')\r\n        })\r\n        .catch(error => {\r\n          setNotificationInformation({\r\n            text: error.response.data.error,\r\n            type: 'error'\r\n          })\r\n          setTimeout(() => {\r\n            setNotificationInformation(null)\r\n          }, 3000)\r\n        })\r\n    }\r\n  }\r\n  const handleDeleteClick = person => {\r\n    if (window.confirm(`Delete ${person.name} ?`)) {\r\n      dbService\r\n        .remove(person.id)\r\n        .then(() => {\r\n          setPersons(persons.filter(n => n.name !== person.name))\r\n          setNotificationInformation({\r\n            text: `Deleted ${person.name}`,\r\n            type: 'notification'\r\n          })\r\n          setTimeout(() => {\r\n            setNotificationInformation(null)\r\n          }, 3000)\r\n        })\r\n        .catch(() => {\r\n          setPersons(persons.filter(n => n.name !== person.name))\r\n          setNotificationInformation({\r\n            text: `${person.name} no longer exists in the phonebook`,\r\n            type: 'error'\r\n          })\r\n          setTimeout(() => {\r\n            setNotificationInformation(null)\r\n          }, 3000)\r\n        })\r\n\r\n      return null\r\n    }\r\n  }\r\n  const handleNameChange = event => setNewName(event.target.value)\r\n\r\n  const handleNumberChange = event => setNewNumber(event.target.value)\r\n\r\n  const handleFilterChange = event => {\r\n    setNewFilter(event.target.value)\r\n  }\r\n\r\n  const personsToShow = filter\r\n    ? persons.filter(item =>\r\n        item.name.toUpperCase().includes(filter.toUpperCase())\r\n      )\r\n    : persons\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification information={notificationInformation} />\r\n      <Filter filter={filter} handleFilterChange={handleFilterChange} />\r\n\r\n      <h2>add a new</h2>\r\n\r\n      <Form\r\n        addPerson={addPerson}\r\n        newName={newName}\r\n        newNumber={newNumber}\r\n        handleNameChange={handleNameChange}\r\n        handleNumberChange={handleNumberChange}\r\n      />\r\n\r\n      <h2>Numbers</h2>\r\n\r\n      <Display persons={personsToShow} handleDeleteClick={handleDeleteClick} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}